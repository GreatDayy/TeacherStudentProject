// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeacherStudentProject;

namespace TeacherStudentProject.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20200921091719_CreatedInitialDb")]
    partial class CreatedInitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeacherStudentProject.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolsId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TeacherStudentProject.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("TeacherStudentProject.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("TeacherStudentProject.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolsId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("TeacherStudentProject.Course", b =>
                {
                    b.HasOne("TeacherStudentProject.School", "Schools")
                        .WithMany("Courses")
                        .HasForeignKey("SchoolsId");
                });

            modelBuilder.Entity("TeacherStudentProject.Student", b =>
                {
                    b.HasOne("TeacherStudentProject.School", "Schools")
                        .WithMany("Students")
                        .HasForeignKey("SchoolsId");
                });

            modelBuilder.Entity("TeacherStudentProject.Teacher", b =>
                {
                    b.HasOne("TeacherStudentProject.School", "Schools")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolsId");
                });
#pragma warning restore 612, 618
        }
    }
}
